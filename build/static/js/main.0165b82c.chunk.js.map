{"version":3,"sources":["Confetti.js","App.jsx","index.js"],"names":["props","useWindowSize","width","height","numberOfPieces","useStyles","makeStyles","theme","main","padding","header","margin","color","subHeader","fontWeight","body","fontSize","content","quote","fontStyle","closing","fontFamily","divider","fullWidth","flex","display","flexCenter","submit","emojiStatus","input","background","status","App","classes","useState","subscribeOpen","setSubscribeOpen","setStatus","handleStatus","CustomForm","formStatus","message","onValidated","statusMessage","setStatusMessage","form","setForm","errors","setErrors","handleFormChange","e","target","name","value","tmp","useEffect","includes","Grid","container","spacing","item","xs","sm","className","style","clsx","role","aria-label","Typography","align","variant","component","TextField","autoComplete","label","onChange","placeholder","InputLabelProps","shrink","error","helperText","type","Button","onClick","size","backgroundColor","startIcon","Confetti","Dialog","onClose","aria-labelledby","open","dialog","DialogTitle","id","DialogContent","url","render","subscribe","formData","alignItems","justify","md","lg","src","border","alt","borderRadius","marginTop","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0165b82c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport useWindowSize from \"react-use/lib/useWindowSize\";\r\nimport Confetti from \"react-confetti\";\r\n\r\nexport default props => {\r\n  const { width, height } = useWindowSize();\r\n  return (\r\n    <Confetti\r\n      width={width}\r\n      height={height}\r\n      numberOfPieces={props.numberOfPieces}\r\n    />\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport MailchimpSubscribe from \"react-mailchimp-subscribe\";\nimport Confetti from \"./Confetti\";\n\nimport {\n  Grid,\n  Typography,\n  TextField,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Button\n} from \"@material-ui/core\";\n\nimport HandIcon from \"@material-ui/icons/PanTool\";\n\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  main: {\n    padding: \"2rem\"\n  },\n  header: {\n    margin: \"2rem\",\n    color: \"#1A237E\"\n  },\n  subHeader: {\n    margin: \"2rem\",\n    fontWeight: \"bold\",\n    color: \"#373D3F\"\n  },\n  body: {\n    fontSize: \"1.6rem\"\n  },\n  content: {\n    margin: \"2rem 0rem\",\n    color: \"#373D3F\",\n    fontWeight: \"lighter\"\n  },\n  quote: {\n    fontStyle: \"italic\",\n    margin: \"2rem 0rem\",\n    fontSize: \"1.2rem\"\n  },\n  closing: {\n    fontFamily: \"Caveat\"\n  },\n  divider: {\n    margin: \"5rem 0rem\"\n  },\n  fullWidth: {\n    width: \"100%\"\n  },\n  flex: {\n    display: \"flex\"\n  },\n  flexCenter: {\n    margin: \"auto\"\n  },\n  submit: {\n    margin: \"2rem 0rem\"\n  },\n  emojiStatus: {\n    fontSize: \"80px\"\n  },\n  input: {\n    background: \"white\"\n  },\n  status: {\n    margin: \"1rem 0\"\n  }\n}));\n\nconst mailchimpUrl =\n  \"https://betterfriendapp.us4.list-manage.com/subscribe/post?u=b9495e03a31ea97485ed32c15&amp;id=8b96342f9e\";\n\nfunction App() {\n  const classes = useStyles();\n  const [subscribeOpen, setSubscribeOpen] = useState(false);\n  const [status, setStatus] = useState();\n\n  const handleSubscribeClose = () => {\n    setSubscribeOpen(false);\n  };\n\n  const handleStatus = status => {\n    setStatus(status);\n  };\n  const btnStyle = {\n    background: \"orange\",\n    color: \"white\",\n    fontSize: \"24px\",\n    borderRadius: \"8px\",\n    border: \"0\",\n    padding: \"10px 20px\",\n    marginTop: \"20px\",\n    width: \"100%\"\n  }\n  const CustomForm = ({ formStatus, message, onValidated, handleStatus }) => {\n    const invalidEmailMsg = \"Please enter a valid email!\";\n\n    const [status, setStatus] = useState(\"\");\n    const [statusMessage, setStatusMessage] = useState(\"\");\n    const [form, setForm] = useState({});\n    const [errors, setErrors] = useState({});\n\n    const submitForm = () => {\n      // HANDLE ERROR VALIDATION\n      if (!form[\"EMAIL\"].includes(\"@\")) {\n        let tmp = { ...errors };\n        tmp[\"EMAIL\"] = invalidEmailMsg;\n        setErrors({ ...tmp });\n      }\n\n      // IF NO ERRORS, SEND TO onValidated()\n      else {\n        onValidated(form);\n        \n      }\n    };\n\n    const handleFormChange = e => {\n      const { name, value } = e.target;\n      let tmp = { ...form };\n      tmp[name] = value;\n\n      setForm({ ...tmp });\n\n      // RESET ERRORS\n      setErrors({});\n    };\n\n    useEffect(() => {\n      \n      let tmp = formStatus;\n\n      if (message) {\n        if (message.includes(\"email address is invalid\"))\n          setStatusMessage(\"Seems your email address is invalid...\");\n        else if (message.includes(\"already subscribed\")) {\n          setStatusMessage(\n            \"Seems you're already subscribed. Let's celebrate anyway!\"\n          );\n          tmp = \"subscribed\";\n        } else if (message.includes(\"too many recent signup requests\"))\n          setStatusMessage(\n            \"Seems you've been trying to sign up too many times...\"\n          );\n        else if (formStatus === \"success\")\n          setStatusMessage(\"Thank you so much. Here's to better friendships!\");\n      }\n\n      setStatus(tmp);\n      handleStatus(tmp);\n    }, [formStatus, message]);\n\n    return (\n      <Grid container spacing={1}>\n        <Grid item xs={12} sm={5}>\n          <div className={classes.flex}>\n            <div className={classes.flexCenter}>\n              <div>\n                <div className={classes.flex}>\n                  <div className={classes.flexCenter}>\n                    <span\n                      style={{ width: \"100%\" }}\n                      className={clsx(classes.flexCenter, classes.emojiStatus)}\n                    >\n                      {status === \"subscribed\" ? (\n                        <span role=\"img\" aria-label=\"face with hearts emoji\">\n                          🥰\n                        </span>\n                      ) : status === \"success\" ? (\n                        <span role=\"img\" aria-label=\"party emoji\">\n                          🥳\n                        </span>\n                      ) : status === \"error\" ? (\n                        <span role=\"img\" aria-label=\"investigate emoji\">\n                          🧐\n                        </span>\n                      ) : (\n                        <span role=\"img\" aria-label=\"cheery emoji\">\n                          😄\n                        </span>\n                      )}\n                    </span>\n                  </div>\n                </div>\n                <Typography\n                  className={classes.status}\n                  align=\"center\"\n                  variant=\"caption\"\n                  component=\"p\"\n                >\n                  {statusMessage || \"\"}\n                </Typography>\n              </div>\n            </div>\n          </div>\n        </Grid>\n        <Grid item xs={12} sm={7}>\n          <TextField\n            autoComplete=\"off\"\n            label=\"Name\"\n            onChange={handleFormChange}\n            name=\"NAME\"\n            placeholder=\"Firstname Lastname\"\n            fullWidth\n            variant=\"outlined\"\n            margin=\"normal\"\n            className={classes.input}\n            InputLabelProps={{\n              shrink: true\n            }}\n          />\n          <TextField\n            autoComplete=\"off\"\n            label=\"Email\"\n            placeholder=\"You@domain.com\"\n            onChange={handleFormChange}\n            name=\"EMAIL\"\n            error={errors[\"EMAIL\"] ? true : false}\n            helperText={errors[\"EMAIL\"] || \"\"}\n            type=\"email\"\n            fullWidth\n            variant=\"outlined\"\n            margin=\"normal\"\n            className={classes.input}\n            InputLabelProps={{\n              shrink: true\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} className={clsx(classes.submit, classes.flex)}>\n          <div className={classes.flexCenter}>\n            <Button\n              onClick={submitForm}\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              style={{ backgroundColor: \"#ffbd44\" }}\n              startIcon={<HandIcon />}\n            >\n              Sign me up\n            </Button>\n          </div>\n        </Grid>\n      </Grid>\n    );\n  };\n\n  return (\n    <div>\n      {status === \"success\" || status === \"subscribed\" ? (\n        <Confetti numberOfPieces={300} />\n      ) : (\n        \"\"\n      )}\n\n      <Dialog\n        onClose={handleSubscribeClose}\n        aria-labelledby=\"subscribe-dialog-title\"\n        open={subscribeOpen}\n        className={classes.dialog}\n      >\n        <DialogTitle\n          style={{ backgroundColor: \"#7ac5ff\", color: \"white\" }}\n          id=\"subscribe-dialog-title\"\n        >\n          Stay Updated\n        </DialogTitle>\n        <DialogContent\n          style={{ backgroundColor: \"#e9faff\" }}\n          className={classes.dialog}\n        >\n          <MailchimpSubscribe\n            url={mailchimpUrl}\n            render={({ subscribe, status, message }) => (\n              <CustomForm\n                handleStatus={handleStatus}\n                formStatus={status}\n                message={message}\n                onValidated={formData => subscribe(formData)}\n              />\n            )}\n          />\n        </DialogContent>\n      </Dialog>\n      <Grid\n        container\n        alignItems=\"center\"\n        justify=\"center\"\n        className={classes.main}\n      >\n        {/* <Grid item xs={12} sm={10} md={8} lg={6} xl={4}> */}\n        <Grid item xs={10} sm={8} md={6} lg={4}>\n          <Typography className={classes.header} variant=\"h2\" align=\"center\">\n          <img src=\"../better-friend-emoji.gif\" height=\"128\" width=\"128\" border=\"0\" alt=\"Become a Better Friend\" />\n          </Typography>\n\n          <Typography\n            className={clsx(classes.subHeader)}\n            variant=\"h5\"\n            align=\"center\"\n          >\n            Let’s talk about social media.\n          </Typography>\n\n          {/*<Typography\n            variant=\"body1\"\n            className={clsx(classes.body, classes.content)}\n          >\n            It all started out so innocent. Tom just wanted to be our friend.\n            The Zuck promised us a better way to stay connected.\n          </Typography>*/}\n\n          <Typography\n            variant=\"body1\"\n            className={clsx(classes.body, classes.content)}\n          >\n           Humans have created an unhealthy relationship with technology. Addiction, mental health, and loneliness are bigger problems than ever, and there’s proven scientific data pointing to social media as the culprit.{\" \"}\n            <span role=\"img\" aria-label=\"mind blown emoji\">\n              🤯\n            </span>\n            .\n          </Typography>\n\n          <Typography\n            variant=\"body1\"\n            className={clsx(classes.body, classes.content)}\n          >\n              There has to be a way to cut out the noise, know about what's important, and support the well-being of ourselves and others. We need a solution to create time for meaningful, shared experiences with others without creating more work for ourselves. \n          </Typography>\n\n          <Typography\n            variant=\"body1\"\n            className={clsx(classes.body, classes.content)}\n          >\n            <span className=\"strong\">At Better Friend, we’re on a mission to <em>enhance humanity</em>.</span>\n          </Typography>\n\n          <Typography\n            variant=\"body1\"\n            className={clsx(classes.body, classes.content)}\n          >\n            We've created a <span className=\"underline\">smart</span>, <span className=\"underline\">easy</span> to use solution that will enable you to build and strengthen your relationships with people you know (and those you should know) so that you can <em>live a better life</em> <span role=\"img\" aria-label=\"nerd emoji\">\n              🤓\n            </span>{\" \"}.\n          </Typography>\n\n          <Typography\n            variant=\"body1\"\n            className={clsx(classes.body, classes.content)}\n          >\n            We ask you to give us your email so that we can let you know when and how you can start using Better Friend.\n          </Typography>\n\n          <Typography\n            variant=\"body1\"\n            className={clsx(classes.body, classes.content)}\n          >\n            Access is limited. Only the first 100 signups will get access, so don't delay!{\" \"}\n            <span role=\"img\" aria-label=\"rocket emoji\">\n              🚀\n            </span>{\" \"}\n            .\n          </Typography>\n          <div className={classes.divider}>\n            <Typography variant=\"h5\" className={classes.closing}>\n              Sincerely,\n            </Typography>\n            <Typography variant=\"h4\" className={classes.closing}>\n              the Better Friend team{\" \"}\n              <span role=\"img\" aria-label=\"heart emoji\">\n                ❤️\n              </span>\n            </Typography>\n            <button style={btnStyle} onClick={() => setSubscribeOpen(true)}>Sign Me Up</button>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}